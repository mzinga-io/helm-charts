{{- if .Values.sync.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.sync.name }}
  labels:
    app: mzinga
    role: sync
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    {{- include "mzinga.dd_unified_tagging.labels" (dict "item" .Values.sync "context" $) | nindent 4 }}
  annotations:
    releaseTime: {{ dateInZone "2006-01-02T15:04:05Z" (now) "UTC" | quote }}
spec:
  replicas: {{ .Values.sync.replicas }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: mzinga
      role: sync
  template:
    metadata:
      labels:
        app: mzinga
        role: sync
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        {{- include "mzinga.dd_unified_tagging.labels" (dict "item" .Values.sync "context" $) | nindent 8 }}
      annotations:
        releaseTime: {{ dateInZone "2006-01-02T15:04:05Z" (now) "UTC" | quote }}
    spec:
      {{- include "mzinga.affinity" (dict "affinity" .Values.sync.affinity "context" $) | nindent 6 }}
      {{- include "mzinga.tolerations" (dict "tolerations" .Values.sync.tolerations  "context" $) | nindent 6 }}
      containers:
        - name: sync
          {{- include "mzinga.image" (dict "image" .Values.sync.image "context" $) | nindent 10 }}
          ports:
            - containerPort: {{ .Values.containerPort | default 3000 }}
          env:
            - name: DISABLE_TRACING
              value: {{ .Values.sync.otel.disableTracing | quote }}
            - name: OTEL_CONSOLE_EXPORTER
              value: {{ .Values.sync.otel.consoleExporter | quote }}
            - name: OTEL_LOG_LEVEL
              value: {{ .Values.sync.otel.logLevel }}
            - name: LOG_LEVEL
              value: {{ .Values.sync.otel.logLevel }}
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: {{ .Values.telemetry.exporter_otlp_endpoint }}
            - name: ENV
              value: {{ .Values.sync.env }}
            - name: SERVICE_NAME
              value: {{ .Values.sync.name }}
            - name: MZINGA_INSTANCE_URL
              value: http://{{ .Values.backoffice.name }}-svc:{{ .Values.containerPort | default 3000 }}
            - name: MZINGA_API_KEY
              value: {{ .Values.sync.mzinga.apiKey | default "THIS_MUST_BE_CHANGED" }}
            - name: REPOSITORY_BASE_URL
              value: {{ .Values.sync.repository.baseUrl }}
              name: REPOSITORY_INSTANCES_URL
              value: {{ .Values.sync.repository.baseUrl }}{{ .Values.sync.repository.instancesUrl }}
            - name: REPOSITORY_COMMITS_URL
              value: {{ .Values.sync.repository.baseUrl }}{{ .Values.sync.repository.commitsUrl }}
            - name: REPOSITORY_PUSHES_URL
              value: {{ .Values.sync.repository.baseUrl }}{{ .Values.sync.repository.pushesUrl }}
            - name: REPOSITORY_QUEUE_URL
              value: {{ .Values.sync.repository.baseUrl }}{{ .Values.sync.repository.queueUrl }}
            - name: REPOSITORY_PAT
              value: {{ .Values.sync.repository.pat }}
            - name: ZITADEL_BEARER_TOKEN
              value: {{ .Values.sync.zitadel.bearerToken }}
            {{- include "mzinga.dd_unified_tagging.env_variables" . | nindent 12 }}
          {{- if .Values.sync.resources }}
          resources: {{- toYaml .Values.sync.resources | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /probes/health
              port: {{ .Values.containerPort | default 3000 }}
            initialDelaySeconds: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /probes/ready
              port: {{ .Values.containerPort | default 3000 }}
            initialDelaySeconds: 5
            periodSeconds: 30
          startupProbe:
            httpGet:
              path: /probes/startup
              port: {{ .Values.containerPort | default 3000 }}
            initialDelaySeconds: 5
            periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.sync.name }}-svc
  labels:
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    releaseTime: {{ dateInZone "2006-01-02T15:04:05Z" (now) "UTC" | quote }}
    prometheus.io/scrape: "true"
    prometheus.io/port: "8888"
spec:
  selector:
    app: mzinga
    role: sync
  ports:
    - name: app
      protocol: TCP
      port: {{ .Values.containerPort | default 3000 }}
      targetPort: {{ .Values.containerPort | default 3000 }}
    - name: metrics
      protocol: TCP
      port: 8888
      targetPort: 8888
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.sync.name }}-ingress
  labels:
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    releaseTime: {{ dateInZone "2006-01-02T15:04:05Z" (now) "UTC" | quote }}
    cert-manager.io/cluster-issuer: letsencrypt-production
    kubernetes.io/ingress.allow-http: 'false'
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  tls:
    - hosts:
        - sync.{{ .Values.basedns }}
      secretName: sync-certificates
  rules:
    - host: sync.{{ .Values.basedns }}
      http:
        paths:
          - path: /metrics
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ .Values.sync.name }}-svc
                port:
                  number: 8888
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ .Values.sync.name }}-svc
                port:
                  number: {{ .Values.containerPort | default 3000 }}
{{- end -}}